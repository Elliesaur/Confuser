<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:Confuser"
	x:Class="Confuser.Advanced"
	x:Name="Window"
	Title="Confuser (Advanced Mode)"
	Width="800" Height="600" Loaded="Window_Loaded"
	Background="{DynamicResource WindowBackgroundBrush}">
    <Window.Resources>
        <DropShadowEffect x:Key="menuEffect" BlurRadius="5" Color="Black" Direction="0" ShadowDepth="0"/>
        <DropShadowEffect x:Key="mItemEffect" BlurRadius="10" Color="White" Direction="0" ShadowDepth="0"/>
        <ControlTemplate x:Key="RadioButtonButton" TargetType="{x:Type RadioButton}">
            <Border x:Name="border" CornerRadius="5,0,0,5" Focusable="False" Background="Transparent" IsEnabled="{TemplateBinding IsEnabled}">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="10" Color="White" Direction="0" ShadowDepth="0"/>
                </Border.Effect>
                <Grid>
                    <Label x:Name="lbl" Content="{TemplateBinding Content}" Margin="1.5" SnapsToDevicePixels="False"
						VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                    <Label Content="{TemplateBinding Content}" Margin="1.5"
						VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                        <Label.Effect>
                            <BlurEffect Radius="10"/>
                        </Label.Effect>
                        <Label.Foreground>
                            <SolidColorBrush x:Name="grow" Color="White" Opacity="0.001"/>
                        </Label.Foreground>
                    </Label>
                    <Label Content="{TemplateBinding Content}" Margin="1.5"
						VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                        <Label.Effect>
                            <BlurEffect Radius="10"/>
                        </Label.Effect>
                        <Label.Foreground>
                            <SolidColorBrush x:Name="select" Color="White" Opacity="0.001"/>
                        </Label.Foreground>
                    </Label>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger SourceName="border" Property="IsMouseOver" Value="true">
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grow" Storyboard.TargetProperty="(Brush.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="0.001"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grow" Storyboard.TargetProperty="(Brush.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="select" Storyboard.TargetProperty="(Brush.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="0.001"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="select" Storyboard.TargetProperty="(Brush.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ShadeMenuItem" TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HightlightedOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="0.001"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="HighlightedOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="Border" Margin="3,2" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0">
                            <Grid Margin="0" Effect="{DynamicResource mItemEffect}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" MinWidth="17" Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                    <ColumnDefinition Width="14"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" Content="{TemplateBinding Icon}" ContentSource="Icon"/>
                                <Grid x:Name="GlyphPanel" Margin="4,0,6,0" VerticalAlignment="Center" Visibility="Hidden">
                                    <Path x:Name="GlyphPanelpath" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" VerticalAlignment="Center" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z"/>
                                </Grid>
                                <ContentPresenter x:Name="HeaderHost" Margin="2,1" Grid.Column="1" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True"/>
                                <ContentPresenter x:Name="Shine" Margin="2,1" Grid.Column="1" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True" Effect="{DynamicResource mItemEffect}" Opacity="0.001" SnapsToDevicePixels="False"/>
                                <Grid x:Name="ArrowPanel" Margin="4,0,6,0" VerticalAlignment="Center" Grid.Column="3">
                                    <Path x:Name="ArrowPanelPath" Fill="{TemplateBinding Foreground}" VerticalAlignment="Center" Data="M0,0L0,8 4,4z"/>
                                </Grid>
                                <Popup x:Name="SubMenuPopup" AllowsTransparency="True" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Focusable="False">
                                    <Grid x:Name="SubMenu">
                                        <Border x:Name="SubMenuBorder" Opacity="0.8" Background="{DynamicResource LightBrush}" BorderThickness="1" CornerRadius="2">
                                            <Border.BorderBrush>
                                                <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                                            </Border.BorderBrush>
                                        </Border>
                                        <Border Padding="2">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Margin" Value="0,1,0,1" />
                                <Setter Property="Padding" Value="6,3,6,3" />
                                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                                <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup" />
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            </Trigger>
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Margin" Value="0,1,0,1" />
                                <Setter Property="Padding" Value="6,3,6,3" />
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="DockPanel.Dock" Value="Top" />
                                <Setter Property="Padding" Value="0,2,0,2" />
                                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="DockPanel.Dock" Value="Top" />
                                <Setter Property="Padding" Value="0,2,0,2" />
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup" />
                            </Trigger>
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel" />
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                            </Trigger>
                            <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                                <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu" />
                                <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu" />
                                <Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder" />
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HightlightedOff}" x:Name="HightlightedOff_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HighlightedOn}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HollowListBox" TargetType="{x:Type ListBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0" />
                        <GradientStop Color="#FF8399A9" Offset="0.375" />
                        <GradientStop Color="#FF718597" Offset="0.375" />
                        <GradientStop Color="#FF617584" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Grid>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Background="{TemplateBinding Background}" />
                            <ScrollViewer Margin="1" Style="{DynamicResource NuclearScrollViewer}" Focusable="false" Background="{x:Null}">
                                <StackPanel Margin="1,1,1,1" IsItemsHost="true" />
                            </ScrollViewer>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HollowListBoxItem" TargetType="{x:Type ListBoxItem}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ListBoxItem}">
        				<Border x:Name="border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0.5" Padding="{TemplateBinding Padding}" CornerRadius="2">
        					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsSelected" Value="True">
        						<Trigger.EnterActions>
        							<BeginStoryboard>
        								<Storyboard Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).Color">
        									<ColorAnimation To="White" Duration="00:00:00.1"/>
        								</Storyboard>
        							</BeginStoryboard>
        						</Trigger.EnterActions>
        						<Trigger.ExitActions>
        							<BeginStoryboard>
        								<Storyboard Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).Color">
        									<ColorAnimation To="Transparent" Duration="00:00:00.1"/>
        								</Storyboard>
        							</BeginStoryboard>
        						</Trigger.ExitActions>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="True">
        						<Trigger.EnterActions>
        							<BeginStoryboard>
        								<Storyboard Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).Color">
        									<ColorAnimation To="#20FFFFFF" Duration="00:00:00.1"/>
        								</Storyboard>
        							</BeginStoryboard>
        						</Trigger.EnterActions>
        						<Trigger.ExitActions>
        							<BeginStoryboard>
        								<Storyboard Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).Color">
        									<ColorAnimation To="Transparent" Duration="00:00:00.1"/>
        								</Storyboard>
        							</BeginStoryboard>
        						</Trigger.ExitActions>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Storyboard x:Key="showProgress" Storyboard.TargetName="progress" Storyboard.TargetProperty="(UIElement.Opacity)">
            <DoubleAnimation To="1" BeginTime="00:00:00.1" Duration="00:00:00.1"/>
        </Storyboard>
        <Storyboard x:Key="resetProgress" BeginTime="00:00:00.1">
            <Storyboard Storyboard.TargetName="phase1">
                <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Width)" To="0" Duration="00:00:00.0"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" To="0" Duration="00:00:00.0"/>
            </Storyboard>
            <Storyboard Storyboard.TargetName="phase2">
                <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Width)" To="0" Duration="00:00:00.0"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" To="0" Duration="00:00:00.0"/>
            </Storyboard>
            <Storyboard Storyboard.TargetName="phase3">
                <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Width)" To="0" Duration="00:00:00.0"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" To="0" Duration="00:00:00.0"/>
            </Storyboard>
            <Storyboard Storyboard.TargetName="phase4">
                <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Width)" To="0" Duration="00:00:00.0"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" To="0" Duration="00:00:00.0"/>
            </Storyboard>
            <Storyboard Storyboard.TargetName="result">
                <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Width)" To="0" Duration="00:00:00.0"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" To="0" Duration="00:00:00.0"/>
            </Storyboard>
        </Storyboard>
        <Storyboard x:Key="showPhase" x:Shared="False">
            <DoubleAnimation To="300" Duration="00:00:0.1" Storyboard.TargetProperty="(FrameworkElement.Width)"/>
            <DoubleAnimation To="1" Duration="00:00:0.1" Storyboard.TargetProperty="(UIElement.Opacity)"/>
        </Storyboard>
    </Window.Resources>
    <Grid x:Name="root">
        <Grid.RowDefinitions>
            <RowDefinition Height="25px"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150px"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid x:Name="space" Background="{DynamicResource WindowBackgroundBrush}" Margin="5" Grid.Column="1" Grid.Row="1" AllowDrop="True" Drop="space_Drop">
            <Grid x:Name="assembly" Opacity="0" Visibility="Hidden">
                <Grid.Resources>
                    <local:CultureConverter x:Key="cult"/>
                    <local:ByteArrConverter x:Key="byteArr"/>
                    <local:KindConverter x:Key="kind"/>
                </Grid.Resources>
                <Border BorderBrush="White" BorderThickness="0.5" />
                <Label Margin="15,15,15,0" VerticalAlignment="Top" Height="30" Content="{Binding Name.Name}" FontWeight="Thin" FontSize="21.333"/>
                <Grid HorizontalAlignment="Left" Margin="15,68,0,0" VerticalAlignment="Top" Height="64" Width="64">
                    <Image x:Name="icon" RenderOptions.BitmapScalingMode="HighQuality" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
                <TextBlock x:Name="asmPath" Foreground="White" Margin="100,70,15,0" VerticalAlignment="Top" Height="20" TextTrimming="CharacterEllipsis" Text="" FontWeight="Thin" FontSize="13.333"/>
                <Label Margin="100,100,15,0" VerticalAlignment="Top" ContentStringFormat="Version : {0}" Height="20" Content="{Binding Name.Version}" FontWeight="Thin" FontSize="13.333"/>
                <Label Margin="100,130,15,0" VerticalAlignment="Top" ContentStringFormat="Culture : {0}" Height="20" Content="{Binding Name.Culture, Converter={StaticResource cult}}" FontWeight="Thin" FontSize="13.333"/>
                <Label Margin="100,160,15,0" VerticalAlignment="Top" ContentStringFormat="Public Key Token : {0}" Height="20" Content="{Binding Name.PublicKeyToken, Converter={StaticResource byteArr}}" FontWeight="Thin" FontSize="13.333"/>
                <Label Margin="100,190,15,0" VerticalAlignment="Top" ContentStringFormat="Type : {0}" Height="20" Content="{Binding MainModule.Kind, Converter={StaticResource kind}}" FontWeight="Thin" FontSize="13.333"/>
                <Grid x:Name="giveME" Visibility="Hidden">
                    <Grid Background="White" Opacity="0.25"/>
                    <Border Height="50" Width="200" Background="{DynamicResource ControlBackgroundBrush}" BorderBrush="{DynamicResource DefaultedBorderBrush}" BorderThickness="1" CornerRadius="5">
                        <Grid>
                            <Label x:Name="message" Content="Drop an assembly here" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontWeight="Thin" FontSize="16"/>
                            <Grid x:Name="loading">
                                <Label Content="Loading..." FontWeight="Thin" VerticalAlignment="Top" Height="20" HorizontalAlignment="Center" Width="60" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Margin="0,5,0,0"/>
                                <ProgressBar x:Name="bar" Width="100" Height="10" IsIndeterminate="False" VerticalAlignment="Bottom" Margin="0,0,0,10" HorizontalAlignment="Center" Maximum="1" />
                            </Grid>
                        </Grid>
                    </Border>
                </Grid>
            </Grid>
            <Grid x:Name="settings" Opacity="0" Visibility="Hidden">
            	<Grid.ColumnDefinitions>
            		<ColumnDefinition Width="0.55*"/>
            		<ColumnDefinition Width="0.35*"/>
            	</Grid.ColumnDefinitions>
            	<local:AssemblyElementPicker x:Name="elements" SelectedItemChanged="elements_SelectedItemChanged"/>
				<Grid x:Name="elementSet" Margin="5,5,5,0" Grid.Column="1" IsEnabled="False">
					<Grid.RowDefinitions>
						<RowDefinition Height="*"/>
						<RowDefinition Height="175px"/>
					</Grid.RowDefinitions>
					<ListBox x:Name="confusionList" BorderBrush="White" BorderThickness="1" ItemContainerStyle="{DynamicResource HollowListBoxItem}" Style="{DynamicResource HollowListBox}" Background="{x:Null}" Margin="5,0,5,5">
						<ListBox.ItemTemplate>
							<DataTemplate>
								<TextBlock FontWeight="Thin" Focusable="False" Text="{Binding Key.Name}" Foreground="White"/>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
					<Grid Grid.Row="1">
						<Grid.RowDefinitions>
							<RowDefinition Height="10px"/>
							<RowDefinition Height="22px"/>
							<RowDefinition Height="10px"/>
							<RowDefinition Height="35px"/>
							<RowDefinition Height="35px"/>
							<RowDefinition Height="35px"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox x:Name="setConfusions" BorderThickness="0.75" FontWeight="Thin" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="6" Margin="5,0,5,0">
                            <ComboBox.ItemTemplate>
								<DataTemplate>
									<TextBlock FontWeight="Thin" Foreground="White" Text="{Binding Path=Name}" Padding="2,1,2,1"/>
								</DataTemplate>
							</ComboBox.ItemTemplate>
						</ComboBox>
						<Button Content="Add" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" Margin="5" BorderThickness="1" Click="addClick"/>
						<Button Content="Remove" Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="3" Margin="5" BorderThickness="1" Click="removeClick"/>
						<Button Content="Clear" Grid.Column="4" Grid.ColumnSpan="2" Grid.Row="3" Margin="5" BorderThickness="1" Click="clearClick"/>
						<ComboBox x:Name="setPreset" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="4" BorderThickness="0.75" FontWeight="Thin" VerticalAlignment="Center" Height="22" Margin="5,0,0,0">
							<TextBlock FontWeight="Thin" Foreground="White" Text="None" Selector.IsSelected="True"/>
							<TextBlock FontWeight="Thin" Foreground="White" Text="Minimum"/>
							<TextBlock FontWeight="Thin" Foreground="White" Text="Normal"/>
							<TextBlock FontWeight="Thin" Foreground="White" Text="Aggressive"/>
							<TextBlock FontWeight="Thin" Foreground="White" Text="Maximum"/>
						</ComboBox>
                        <Button Content="Add Preset" Grid.Column="3" Grid.ColumnSpan="3" Grid.Row="4" Margin="10,5,10,5" BorderThickness="1" Click="addPresetClick"/>
                        <Button Content="Apply to Child" Grid.Column="3" Grid.ColumnSpan="3" Grid.Row="5" Margin="10,5,10,5" BorderThickness="1" Click="applyChildClick"/>
                    </Grid>
				</Grid>
            </Grid>
            <Grid x:Name="confuse" Opacity="0" Visibility="Hidden">
                <Border BorderBrush="White" BorderThickness="0.5"/>
                <Grid x:Name="options" VerticalAlignment="Top" Height="100">
                    <TextBox x:Name="output" Margin="115,10,40,0" VerticalAlignment="Top" Height="25" FontWeight="Thin" BorderThickness="0.75" VerticalContentAlignment="Center" BorderBrush="White"/>
                    <Button x:Name="browseOutput" HorizontalAlignment="Right" Margin="0,10,10,0" VerticalAlignment="Top" Width="25" Height="25" Content="..." Background="#00000000" BorderBrush="White" BorderThickness="0.5" FontWeight="Thin" FontSize="10.667" Click="browseClick"/>
                    <Label Margin="5,10,0,0" VerticalAlignment="Top" Height="25" Content="Output Path :" Width="105" VerticalContentAlignment="Center" HorizontalContentAlignment="Right" HorizontalAlignment="Left" FontWeight="Thin"/>
                    <Label Margin="5,40,0,0" VerticalAlignment="Top" Height="25" Content="Strong Name Key :" HorizontalAlignment="Left" Width="105" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" FontWeight="Thin"/>
                    <TextBox x:Name="sn" Margin="115,40,40,0" VerticalAlignment="Top" Height="25" FontWeight="Thin" BorderThickness="0.75" VerticalContentAlignment="Center" BorderBrush="White"/>
                    <Button x:Name="browseSn" HorizontalAlignment="Right" Margin="0,40,10,0" VerticalAlignment="Top" Width="25" Height="25" Content="..." Background="#00000000" BorderBrush="White" BorderThickness="0.5" FontWeight="Thin" FontSize="10.667" Click="browseClick"/>
                </Grid>
                <Button x:Name="doConfuse" HorizontalAlignment="Right" Margin="0,75,10,0" VerticalAlignment="Top" Width="75" Height="25" Content="Confuse!" Background="#00000000" BorderBrush="White" BorderThickness="0.5" FontWeight="Thin" Click="DoConfuse" />
                <local:Scroller x:Name="progress" Margin="10,110,10,10" Opacity="0">
                    <StackPanel Orientation="Horizontal">
                        <Border x:Name="phase1" CornerRadius="2" BorderThickness="1" BorderBrush="White" Background="{DynamicResource ControlBackgroundBrush}" Width="0" Height="225" Margin="5,0,5,0">
                            <Grid>
                                <Border VerticalAlignment="Top" Height="20" BorderThickness="0,0,0,0.75" BorderBrush="White">
                                    <Label FontWeight="Thin" Content=" Phase 1 (Initalization)" VerticalContentAlignment="Center"/>
                                </Border>
                                <Grid VerticalAlignment="Stretch" Margin="0,20,0,0">
                                    <TextBox FontWeight="Thin" BorderBrush="{x:Null}" Background="Transparent" IsReadOnly="True" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <Border x:Name="phase2" CornerRadius="2" BorderThickness="1" BorderBrush="White" Background="{DynamicResource ControlBackgroundBrush}" Width="0" Height="225" Margin="5,0,5,0">
                            <Grid>
                                <Border VerticalAlignment="Top" Height="20" BorderThickness="0,0,0,0.75" BorderBrush="White">
                                    <Label FontWeight="Thin" Content=" Phase 2 (Obfuscating Structure)" VerticalContentAlignment="Center"/>
                                </Border>
                                <Grid VerticalAlignment="Stretch" Margin="0,20,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.5*"/>
                                        <RowDefinition Height="0.2*"/>
                                        <RowDefinition Height="0.3*"/>
                                    </Grid.RowDefinitions>
                                    <TextBox FontWeight="Thin" Grid.Row="0" BorderBrush="{x:Null}" Background="Transparent" IsReadOnly="True" VerticalAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                                    <ProgressBar Grid.Row="1" VerticalAlignment="Stretch" Maximum="1" Minimum="0"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <Border x:Name="phase3" CornerRadius="2" BorderThickness="1" BorderBrush="White" Background="{DynamicResource ControlBackgroundBrush}" Width="0" Height="225" Margin="5,0,5,0">
                            <Grid>
                                <Border VerticalAlignment="Top" Height="20" BorderThickness="0,0,0,0.75" BorderBrush="White">
                                    <Label FontWeight="Thin" Content=" Phase 3 (Obfuscating Metadata)" VerticalContentAlignment="Center"/>
                                </Border>
                                <Grid VerticalAlignment="Stretch" Margin="0,20,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.5*"/>
                                        <RowDefinition Height="0.2*"/>
                                        <RowDefinition Height="0.3*"/>
                                    </Grid.RowDefinitions>
                                    <TextBox FontWeight="Thin" Grid.Row="0" BorderBrush="{x:Null}" Background="Transparent" IsReadOnly="True" VerticalAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                                    <ProgressBar Grid.Row="1" VerticalAlignment="Stretch" Maximum="1" Minimum="0"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <Border x:Name="phase4" CornerRadius="2" BorderThickness="1" BorderBrush="White" Background="{DynamicResource ControlBackgroundBrush}" Width="0" Height="225" Margin="5,0,5,0">
                            <Grid>
                                <Border VerticalAlignment="Top" Height="20" BorderThickness="0,0,0,0.75" BorderBrush="White">
                                    <Label FontWeight="Thin" Content=" Phase 4 (Processing PE)" VerticalContentAlignment="Center"/>
                                </Border>
                                <Grid VerticalAlignment="Stretch" Margin="0,20,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.5*"/>
                                        <RowDefinition Height="0.2*"/>
                                        <RowDefinition Height="0.3*"/>
                                    </Grid.RowDefinitions>
                                    <TextBox FontWeight="Thin" Grid.Row="0" BorderBrush="{x:Null}" Background="Transparent" IsReadOnly="True" VerticalAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                                    <ProgressBar Grid.Row="1" VerticalAlignment="Stretch" Maximum="1" Minimum="0"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <Border x:Name="result" CornerRadius="2" BorderThickness="1" BorderBrush="White" Background="{DynamicResource ControlBackgroundBrush}" Width="0" Height="225" Margin="5,0,5,0">
                            <Grid>
                                <Border VerticalAlignment="Top" Height="20" BorderThickness="0,0,0,0.75" BorderBrush="White">
                                    <Label FontWeight="Thin" Content=" Result" VerticalContentAlignment="Center"/>
                                </Border>
                                <Grid VerticalAlignment="Stretch" Margin="0,20,0,0">
                                    <Path x:Name="resultOk" Visibility="Hidden"/>
                                    <Path x:Name="resultFail" Visibility="Hidden"/>
                                    <TextBox FontWeight="Thin" BorderBrush="{x:Null}" Background="Transparent" IsReadOnly="True"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </StackPanel>
                </local:Scroller>
            </Grid>
            <Grid x:Name="about" Opacity="0" Visibility="Hidden" Loaded="AboutLoaded">
                <Grid Width="250" Height="150">
                    <Border BorderBrush="White" BorderThickness="0.5" />
                    <TextBlock Margin="10,10,10,0" Foreground="White"><InlineUIContainer>
                    		<TextBlock VerticalAlignment="Top" Height="45" Text="Confuser" FontSize="32" FontWeight="Thin"/>
                    	</InlineUIContainer><Run Text=" "/><InlineUIContainer>
                    		<TextBlock x:Name="ver" Text="v1.3" FontSize="14" FontWeight="Thin" VerticalAlignment="Top" Height="45" Width="105"/>
                    	</InlineUIContainer></TextBlock>
                    <Label Margin="0,0,10,10" Content="Made by Ki" FontSize="16" FontWeight="Thin" VerticalAlignment="Bottom" Height="20" HorizontalAlignment="Right" Width="105" VerticalContentAlignment="Center" HorizontalContentAlignment="Right"/>
                </Grid>
            </Grid>
        </Grid>
        <Menu x:Name="menu" Margin="0" Grid.ColumnSpan="2" Height="25" FontWeight="Thin" FontSize="13.333" Effect="{DynamicResource menuEffect}">
            <MenuItem Header="File" Style="{DynamicResource ShadeMenuItem}" FontWeight="Thin">
                <MenuItem Header="Basic Mode..." Style="{DynamicResource ShadeMenuItem}" Click="bas_Click"/>
                <MenuItem Header="Load Plugins..." Style="{DynamicResource ShadeMenuItem}" Click="loadPlug_Click"/>
                <MenuItem Header="Exit" Style="{DynamicResource ShadeMenuItem}" Click="exit_Click"/>
            </MenuItem>
        </Menu>
        <StackPanel x:Name="seltor" Margin="0,0,0,0" Grid.Row="1">
            <RadioButton x:Name="assemblyButton"  Focusable="False" Margin="5" Height="35" Content="Assembly"  Template="{DynamicResource RadioButtonButton}" FontWeight="Thin" FontSize="14" Checked="radioChecked" Unchecked="radioUnchecked"/>
            <RadioButton x:Name="settingsButton" Focusable="False" Margin="5" Height="35" Content="Settings" Template="{DynamicResource RadioButtonButton}" FontWeight="Thin" FontSize="14" Checked="radioChecked" Unchecked="radioUnchecked"/>
            <RadioButton x:Name="confuseButton"	Focusable="False" Margin="5" Height="35" Content="Confuse"	Template="{DynamicResource RadioButtonButton}" FontWeight="Thin" FontSize="14" Checked="radioChecked" Unchecked="radioUnchecked"/>
            <RadioButton x:Name="aboutButton"	 Focusable="False" Margin="5" Height="35" Content="About"	 Template="{DynamicResource RadioButtonButton}" FontWeight="Thin" FontSize="14" Checked="radioChecked" Unchecked="radioUnchecked"/>
        </StackPanel>
    </Grid>
</Window>